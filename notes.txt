TRACK CAR STATUS:
	* keep info in a status struct
	* put it / initialize it in tracking.c / .h
	* include it in all other files that need it

signals.c:
	generate pwm / ppm signals with %percent as input

servo.c:
	generic servo functions:
	* center servo
	* adjust servo angle (-1, 1)
	all of the above:
	--> update steering angle in status struct

motors.c:
	generic motor functions:
	* stop motors(L, R)
	* set speeds(L, R)
	* initialization (sad we have to do this, find cleaner way)

drive_tracking.c:
	(* update wheel speed from encoder readings)
	for now, just update status struct with latest speed value
	given to the set speeds function of motors.c

pot.c:
* max value = 4095.0f
* want to normalize to (-1, 1)
	-1 + val / (max/2)

safety.c:
	* control throttle change rate
	* control servo change rate
	* set servo hard limits for steering

	applying throttle / steering control in efficient manner:
		* calculate desired speed
		* pass said speed to safety functions as ptr
		* have it adjusted accordingly

write initialization function for motors

TODO:
	speed reduction with steering angle
	move from float to ints for better performance
